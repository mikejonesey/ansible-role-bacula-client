---
# tasks file for bacula-client

- name: collect facts about system services
  service_facts:
  register: services_state

- name: Setup community binaries for Debian
  include_tasks: community_binaries_debian.yml
  when: "bacula_community_binaries|bool == True and ansible_os_family == 'Debian' and ansible_architecture == 'x86_64' and ansible_distribution_release in bacula_community_deb_releases"

- name: Setup community binaries for CentOS
  include_tasks: community_binaries_centos.yml
  when: "bacula_community_binaries|bool == True and ansible_distribution == 'CentOS' and ansible_architecture == 'x86_64'"

- name: Install Bacula FD (Client)
  package:
    name: "{{ install_packages }}"
    state: latest

- name: Gen a password for FD
  set_fact:
    bacula_client_pass: "{{ lookup('passwordstore', 'bacula/{{ inventory_hostname }}/fd directory={{ password_fullpath }} create=true length=12 overwrite=no')}}"

- name: Update FD Template
  template:
    src: etc/bacula/bacula-fd.conf
    dest: /etc/bacula/bacula-fd.conf
  when: "ansible_distribution == 'CentOS'"

- name: Update FD Template
  template:
    src: etc/bacula/bacula-fd-9.conf
    dest: /etc/bacula/bacula-fd.conf
  when: "ansible_os_family == 'Debian'"

- name: Print FD name and pass
  debug:
    msg: "FD Name: {{ bacula_client_name }}  Password:  {{ bacula_client_pass }}"

- name: Start and enable client
  systemd:
    name: bacula-fd
    state: started
    enabled: yes

- name: add firewalld rule
  firewalld:
    source: "{{ bacula_server_address }}/32"
    zone: internal
    state: enabled
    permanent: true
  when: "services_state.ansible_facts.services['firewalld.service'].status == 'enabled'"
